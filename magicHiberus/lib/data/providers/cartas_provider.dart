import 'dart:convert';

import 'package:magichiberus/data/repositories/cartas_repositorio.dart';
import 'package:magichiberus/domain/entities/carta_entitie.dart';
import 'package:flutter/material.dart';


class CartasProvider extends ChangeNotifier {
  CartasRepositorio? cartasRepositorio;
  List<Carta> listaCartas = [];
  
  CartasProvider() {
    cartasRepositorio = new CartasRepositorio();
    this.getAllCartas();
  }


  Future<List<Carta>> getAllCartas() async {
    var response = await cartasRepositorio!.getAllCartasRepo();
    listaCartas = parseadoCartas(response.body);
    return listaCartas;
  }
  //TODO: comprobar que la carta no es nula o est√° vacia
  Future<Carta> getCartaById(int id) async {
    var response = await cartasRepositorio!.getCartaByIdRepo(id);
    Carta carta = parseadoCarta(response.body);
    return carta;
  }
  //TODO: puede devolver varias entradas, por lo que es necesario contemplarlo como una lista
  Future<Carta> getCartaByName(String name) async {
    var response = await cartasRepositorio!.getCartaByNameRepo(name);
    List<Carta> cartas = parseadoCartas(response.body);
    return cartas.elementAt(0); //Por el momento haremos que devuelva la primera coincidencia
  }


  List<Carta> parseadoCartas(String responseBody){
    final parseado = json.decode(responseBody).cast<String, dynamic>();
    return Autogenerated.fromJson(parseado).cartas;
  }
  Carta parseadoCarta(String responseBody){
    final parseado = json.decode(responseBody).cast<String, dynamic>();
    return Carta.fromJson(parseado);
  }
}